{"version":3,"sources":["01_main.js"],"names":["document","addEventListener","head","querySelector","body","getActiveTabName","dataset","tab","setActiveContent","classList","remove","add","e","caption","target","closest","contains","tabs","swiper","Swiper","slidesPerView","spaceBetween","navigation","nextEl","prevEl","swiper2","swiper3","swiper4","swiper5"],"mappings":"AAGAA,SAASC,iBAAiB,mBAAoB,KAE7B,MACX,MAAMC,EAAOF,SAASG,cAAc,eAC9BC,EAAOJ,SAASG,cAAc,eAE9BE,EAAmB,IAChBH,EAAKC,cAAc,yBAAyBG,QAAQC,IAGvDC,EAAmB,KACnBJ,EAAKD,cAAc,0BACrBC,EAAKD,cAAc,yBAAyBM,UAAUC,OAAO,wBAE/DN,EAAKD,cAAc,aAAaE,QAAuBI,UAAUE,IAAI,yBAIlET,EAAKC,cAAc,0BACtBD,EAAKC,cAAc,kBAAkBM,UAAUE,IAAI,wBAGrDH,EAAiBH,KAEjBH,EAAKD,iBAAiB,QAASW,IAC7B,MAAMC,EAAUD,EAAEE,OAAOC,QAAQ,kBAC5BF,IACDA,EAAQJ,UAAUO,SAAS,0BAE3Bd,EAAKC,cAAc,0BACrBD,EAAKC,cAAc,yBAAyBM,UAAUC,OAAO,wBAG/DG,EAAQJ,UAAUE,IAAI,wBAEtBH,EAAiBH,UAIrBY,KAKJ,IAAIC,OAAS,IAAIC,OAAO,eAAgB,CACpCC,cAAe,EACfC,aAAc,EACdC,WAAY,CACRC,OAAQ,sBACRC,OAAQ,yBAGZC,QAAU,IAAIN,OAAO,kBAAmB,CACxCC,cAAe,EACfC,aAAc,EACdC,WAAY,CACRC,OAAQ,sBACRC,OAAQ,yBAGZE,QAAU,IAAIP,OAAO,mBAAoB,CACzCC,cAAe,EACfC,aAAc,EACdC,WAAY,CACRC,OAAQ,sBACRC,OAAQ,yBAGZG,QAAU,IAAIR,OAAO,iBAAkB,CACvCC,cAAe,EACfC,aAAc,EACdC,WAAY,CACRC,OAAQ,sBACRC,OAAQ,yBAGZI,QAAU,IAAIT,OAAO,mBAAoB,CACzCC,cAAe,EACfC,aAAc,EACdC,WAAY,CACRC,OAAQ,sBACRC,OAAQ","file":"../js/main.min.js","sourcesContent":["\r\n// tabs\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => { // Структура страницы загружена и готова к взаимодействию\r\n\r\n    const tabs = () => { // объявляем основную функцию для вкладок, чтобы вся логика была в одном месте\r\n      const head = document.querySelector('.tabs__head') // ищем элемент с кнопками и записываем в константу\r\n      const body = document.querySelector('.tabs__body') // ищем элемент с контентом и записываем в константу\r\n  \r\n      const getActiveTabName = () => { // объявляем функцию для получения названия активной вкладки\r\n        return head.querySelector('.tabs__caption_active').dataset.tab // возвращаем значение data-tab активной кнопки\r\n      }\r\n  \r\n      const setActiveContent = () => { // объявляем функцию для установки активного элемента контента\r\n        if (body.querySelector('.tabs__content_active')) { // если уже есть активный элемент контента\r\n          body.querySelector('.tabs__content_active').classList.remove('tabs__content_active') // то скрываем его\r\n        }\r\n        body.querySelector(`[data-tab=${getActiveTabName()}]`).classList.add('tabs__content_active') // затем ищем элемент контента, у которого значение data-tab совпадает со значением data-tab активной кнопки и отображаем его\r\n      }\r\n  \r\n      // проверяем при загрузке страницы, есть ли активная вкладка\r\n      if (!head.querySelector('.tabs__caption_active')) {  // если активной вкладки нет\r\n        head.querySelector('.tabs__caption').classList.add('tabs__caption_active') // то делаем активной по-умолчанию первую вкладку\r\n      }\r\n  \r\n      setActiveContent(getActiveTabName()) // устанавливаем активный элемент контента в соответствии с активной кнопкой при загрузке страницы\r\n  \r\n      head.addEventListener('click', e => { // при клике на .tabs__head\r\n        const caption = e.target.closest('.tabs__caption') // узнаем, был ли клик на кнопке\r\n        if (!caption) return // если клик был не на кнопке, то прерываем выполнение функции\r\n        if (caption.classList.contains('tabs__caption_active')) return // если клик был на активной кнопке, то тоже прерываем выполнение функции и ничего не делаем\r\n  \r\n        if (head.querySelector('.tabs__caption_active')) { // если уже есть активная кнопка\r\n          head.querySelector('.tabs__caption_active').classList.remove('tabs__caption_active') // то удаляем ей активный класс\r\n        }\r\n  \r\n        caption.classList.add('tabs__caption_active') // затем добавляем активный класс кнопке, на которой был клик\r\n  \r\n        setActiveContent(getActiveTabName()) // устанавливаем активный элемент контента в соответствии с активной кнопкой\r\n      })\r\n    }\r\n  \r\n    tabs() // вызываем основную функцию\r\n  \r\n  })\r\n\r\n\r\nvar swiper = new Swiper(\".staffSlider\", {\r\n    slidesPerView: 4,\r\n    spaceBetween: 0,\r\n    navigation: {\r\n        nextEl: \".swiper-button-next\",\r\n        prevEl: \".swiper-button-prev\",\r\n    },\r\n});\r\nvar swiper2 = new Swiper(\".productsSlider\", {\r\n    slidesPerView: 4,\r\n    spaceBetween: 5,\r\n    navigation: {\r\n        nextEl: \".swiper-button-next\",\r\n        prevEl: \".swiper-button-prev\",\r\n    },\r\n});\r\nvar swiper3 = new Swiper(\".equipmentSlider\", {\r\n    slidesPerView: 1,\r\n    spaceBetween: 0,\r\n    navigation: {\r\n        nextEl: \".swiper-button-next\",\r\n        prevEl: \".swiper-button-prev\",\r\n    },\r\n});\r\nvar swiper4 = new Swiper(\".resultsSlider\", {\r\n    slidesPerView: 2,\r\n    spaceBetween: 5,\r\n    navigation: {\r\n        nextEl: \".swiper-button-next\",\r\n        prevEl: \".swiper-button-prev\",\r\n    },\r\n});\r\nvar swiper5 = new Swiper(\".feedbacksSlider\", {\r\n    slidesPerView: 4,\r\n    spaceBetween: 5,\r\n    navigation: {\r\n        nextEl: \".swiper-button-next\",\r\n        prevEl: \".swiper-button-prev\",\r\n    },\r\n});\r\n"]}